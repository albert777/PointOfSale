<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>